// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoAplicativo.Data;

#nullable disable

namespace ProjetoAplicativo.Migrations
{
    [DbContext(typeof(ModeloEntidades))]
    [Migration("20250710183408_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProjetoAplicativo.Models.Abreviatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Discriminador")
                        .HasColumnType("int");

                    b.Property<int?>("EntidadeId")
                        .HasColumnType("int");

                    b.Property<string>("NomeAbreviado")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Abreviatura");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Cena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PecaId");

                    b.ToTable("Cena");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Gesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Explicacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Gesto");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Instrucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CenaId")
                        .HasColumnType("int");

                    b.Property<int>("OrdemCronologica")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoDeInstrucao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CenaId");

                    b.ToTable("Instrucao");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.InstrucaoPersonagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstrucaoId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<bool>("ShowAll")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowAllExcept")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoDeParticipacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstrucaoId");

                    b.HasIndex("PersonagemId");

                    b.ToTable("InstrucaoPersonagem");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Palco.Cenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cenario");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Palco.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CenarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CenarioId");

                    b.ToTable("Ponto");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CenarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CenarioId");

                    b.ToTable("Peca");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.PecaPersonagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PecaId");

                    b.HasIndex("PersonagemId");

                    b.ToTable("PecaPersonagem");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Personagem");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Cena", b =>
                {
                    b.HasOne("ProjetoAplicativo.Models.Peca", "Peca")
                        .WithMany("Cenas")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Instrucao", b =>
                {
                    b.HasOne("ProjetoAplicativo.Models.Cena", "Cena")
                        .WithMany("Instrucoes")
                        .HasForeignKey("CenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cena");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.InstrucaoPersonagem", b =>
                {
                    b.HasOne("ProjetoAplicativo.Models.Instrucao", "Instrucao")
                        .WithMany("InstrucoesPersonagens")
                        .HasForeignKey("InstrucaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoAplicativo.Models.Personagem", "Personagem")
                        .WithMany("InstrucoesPersonagens")
                        .HasForeignKey("PersonagemId");

                    b.Navigation("Instrucao");

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Palco.Zona", b =>
                {
                    b.HasOne("ProjetoAplicativo.Models.Palco.Cenario", "Cenario")
                        .WithMany("Zonas")
                        .HasForeignKey("CenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cenario");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Peca", b =>
                {
                    b.HasOne("ProjetoAplicativo.Models.Palco.Cenario", null)
                        .WithMany("Pecas")
                        .HasForeignKey("CenarioId");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.PecaPersonagem", b =>
                {
                    b.HasOne("ProjetoAplicativo.Models.Peca", "Peca")
                        .WithMany("PecasPersonagens")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoAplicativo.Models.Personagem", "Personagem")
                        .WithMany("PecasPersonagens")
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peca");

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Cena", b =>
                {
                    b.Navigation("Instrucoes");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Instrucao", b =>
                {
                    b.Navigation("InstrucoesPersonagens");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Palco.Cenario", b =>
                {
                    b.Navigation("Pecas");

                    b.Navigation("Zonas");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Peca", b =>
                {
                    b.Navigation("Cenas");

                    b.Navigation("PecasPersonagens");
                });

            modelBuilder.Entity("ProjetoAplicativo.Models.Personagem", b =>
                {
                    b.Navigation("InstrucoesPersonagens");

                    b.Navigation("PecasPersonagens");
                });
#pragma warning restore 612, 618
        }
    }
}
